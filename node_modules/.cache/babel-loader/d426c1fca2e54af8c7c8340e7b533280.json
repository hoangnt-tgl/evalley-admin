{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst {\n  BASE_URL\n} = require('../../config');\nexport default {\n  data() {\n    return {\n      items: [],\n      tablefields: [{\n        key: \"images\",\n        label: \"Image\",\n        sortable: false\n      }, {\n        key: \"title\",\n        label: \"Name\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"brand\",\n        label: \"Brand\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"category\",\n        label: \"Category\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"discount\",\n        label: \"Discount\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"price\",\n        label: \"Price\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"stock\",\n        label: \"Quantity\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"status\",\n        label: \"Status\",\n        sortable: true,\n        editable: true\n      }, {\n        key: \"actions\"\n      }],\n      filter: null,\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [5, 10, 15, 50],\n      selectMode: \"multi\",\n      selected: []\n    };\n  },\n  created() {\n    this.$http.get(`${BASE_URL}/product/getall`, {\n      token: \"\"\n    }).then(response => {\n      this.items = response.data;\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.tablefields.filter(f => f.sortable).map(f => {\n        return {\n          text: f.label,\n          value: f.key\n        };\n      });\n    },\n    selectedRows() {\n      return this.items.filter(item => item.delete);\n    }\n  },\n  methods: {\n    deleteSelected(item) {\n      let objIndex = this.selected.findIndex(obj => obj == item._id);\n      if (objIndex > -1) {\n        this.selected.splice(objIndex, 1);\n      } else {\n        this.selected.push(item._id);\n      }\n    },\n    getImgUrl(path) {\n      return require(\"@/assets/images/pro3/\" + path);\n    },\n    rowSelected(item) {\n      this.selected = item._id;\n      if (item[0]) {\n        this.edit = this.edit !== item[0]._id ? item[0]._id : null;\n      }\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n    deleteRow() {\n      for (var i = this.items.length - 1; i >= 0; i--) {\n        for (var j = 0; j < this.selected.length; j++) {\n          if (this.items[i] && this.items[i]._id === this.selected[j]) {\n            this.items.splice(i, 1);\n          }\n        }\n      }\n      // this.$http.post(`${BASE_URL}/user/delete`, {\n      //     token: \"\",\n      //     selected: selected\n      // })\n      // .then(response => {\n      //     if(response.data.success){\n\n      //     }\n      // })\n      // .catch(function (error) {\n      //     console.log('error', error);\n      // });\n    },\n\n    deleteBatchRow() {\n      for (var i = 0; i < this.selected.length; i++) {\n        if (this.items[i]._id == this.selected[i]) {\n          this.items.splice(this.items[i], 1);\n        }\n      }\n      console.log(-1);\n    },\n    showMsgBoxTwo() {\n      this.$bvModal.msgBoxConfirm('Are you sure!', {\n        title: 'Confirmation',\n        size: 'md',\n        buttonSize: 'sm',\n        okVariant: 'primary',\n        okTitle: 'YES',\n        cancelTitle: 'CANCLE',\n        footerClass: 'p-2',\n        hideHeaderClose: false\n        // centered: true\n      }).then(value => {\n        if (value) {\n          this.deleteRow();\n          this.selected = [];\n        }\n      }).catch(err => {\n        // An error occurred\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA4KA;EAAAA;AAAA;AAEA;EAEAC;IACA;MACAC;MACAC,cACA;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;MAAA,EACA;MACAI;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IAEA;MACAC;IACA,GACAC;MACA;IACA,GACAC;MACAC;IACA;EAEA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACA;MACA,wBACAd,wBACAe;QACA;UAAAC;UAAAC;QAAA;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;UACA;YACA;UACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;IACA;;IACAC;MACA;QACA;UACA;QACA;MACA;MACAd;IACA;IACAe;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACA;MACA,GACAzB;QACA;UACA;UACA;QACA;MACA,GACAC;QACA;MACA;IACA;EACA;AACA","names":["BASE_URL","data","items","tablefields","key","label","sortable","editable","filter","totalRows","currentPage","perPage","pageOptions","selectMode","selected","created","token","then","catch","console","mounted","computed","sortOptions","map","text","value","selectedRows","methods","deleteSelected","getImgUrl","rowSelected","onFiltered","deleteRow","deleteBatchRow","showMsgBoxTwo","title","size","buttonSize","okVariant","okTitle","cancelTitle","footerClass","hideHeaderClose"],"sourceRoot":"src/views/products","sources":["ProductList.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container-fluid\">\n      <div class=\"page-header\">\n        <Breadcrumbs main=\"Users\" title=\"User Lists\" />\n      </div>\n    </div>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h5>Product List</h5>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row justify-content-end\">\n                <!-- <router-link to=\"/create-user\" class=\"col\">\n                  <b-button class=\"btn-popup pull-right\">Create User</b-button >\n                </router-link> -->\n\n                <router-link to=\"/add-product\" class=\"col-auto\">\n                  <b-button class=\"btn-popup pull-right\">Create Product</b-button >\n                </router-link>\n              </div>\n              <b-row>\n                <b-col xl=\"3\" lg=\"4\" md=\"6\">\n                  <b-form-group\n                    label-cols=\"3\"\n                    label=\"Show\"\n                    class=\"datatable-select\"\n                  >\n                    <b-form-select\n                      v-model=\"perPage\"\n                      :options=\"pageOptions\"\n                    ></b-form-select>\n                  </b-form-group>\n                </b-col>\n                <b-col class=\"offset-xl-6 offset-lg-2 search-rs\" xl=\"3\" lg=\"5\" md=\"6\">\n                  <b-form-group\n                    label-cols=\"3\"\n                    label=\"Search\"\n                    class=\"datatable-select\"\n                  >\n                    <b-form-input\n                      type=\"text\"\n                      v-model=\"filter\"\n                      placeholder=\"Search\"\n                    ></b-form-input>\n                  </b-form-group>\n                </b-col>\n              </b-row>\n              <div class=\"table-responsive datatable-vue user-list\">\n                <div>\n                  <b-modal\n                    id=\"modal-1\"\n                    title=\"Confirmation\"\n                    @ok=\"deleteBatchRow\"\n                  >\n                    <p class=\"my-4\">Are you sure!</p>\n                  </b-modal>\n                </div>\n                <div></div>\n                <!--<commonTable\n                  :selectMode=\"selectMode\"\n                  :items=\"items\"\n                  :fields=\"tablefields\"\n                  :filter=\"filter\"\n                  :perPage=\"perPage\"\n                  :totalRows=\"totalRows\"\n                  :currentPage=\"currentPage\"\n                  :selectable=\"false\"\n                >\n                </commonTable>-->\n                <b-table\n                  class=\"text-center\"\n                  :select-mode=\"selectMode\"\n                  show-empty\n                  striped\n                  hover\n                  head-variant=\"light\"\n                  bordered\n                  stacked=\"md\"\n                  :items=\"items\"\n                  :fields=\"tablefields\"\n                  :filter=\"filter\"\n                  :current-page=\"currentPage\"\n                  :per-page=\"perPage\"\n                  @filtered=\"onFiltered\"\n                  @row-selected=\"rowSelected\"\n                >\n                  <template v-slot:head(delete)>\n                    <b-button\n                      variant=\"danger\"\n                      :disabled=\"selectedRows.length === 0\"\n                      @click=\"showMsgBoxTwo\"\n                      >Delete</b-button\n                    >\n                  </template>\n                  <template #cell(images)=\"field\">\n                    <img\n                      height=\"50px\"\n                      :src=\"getImgUrl(field.item.images[0].src)\"\n                      width=\"50px\"\n                    />\n                  </template>\n                  <template v-slot:cell(actions)=\"{ item }\">\n                    <router-link\n                      style=\"font-size: 20px; color: blue;\"\n                      :to=\"'/edit-user/'+item._id\"\n                    >\n                      <feather\n                        type=\"edit-2\"\n                        stroke=\"#3758FD\"\n                        stroke-width=\"1\"\n                        size=\"18px\"\n                        fill=\"#3758FD\"\n                        stroke-linejoin=\"round\"\n                      ></feather>\n                    </router-link>\n\n                    \n                \n                  </template>\n                  <template #cell(status) v-for=\"(item, index) in items\">\n                    <feather\n                      v-if=\"item.status == 'active'\"\n                      :key=\"index\"\n                      type=\"circle\"\n                      stroke=\"#81BA01\"\n                      stroke-width=\"1\"\n                      size=\"12px\"\n                      :fill=\"\n                        item.status == 'active'\n                          ? '#81BA01'\n                          : item.status == 'inactive'\n                          ? '#FBBC58'\n                          : ''\n                      \"\n                      stroke-linejoin=\"round\"\n                    ></feather>\n                  </template>\n                  <b-table-column v-slot:cell(delete)>\n                    <a href=\"#\">edit</a>\n                    <a href=\"#\">remove</a>\n                  </b-table-column>\n\n                  <template v-slot:cell(delete)=\"{ item, field: { key } }\">\n                    <b-checkbox\n                      v-model=\"item[key]\"\n                      @change=\"deleteSelected(item)\"\n                    ></b-checkbox>\n                  </template>\n                </b-table>\n              </div>\n              <b-col md=\"12\" class=\"my-1 p-0 pagination-justify\">\n                <b-pagination\n                  v-model=\"currentPage\"\n                  :total-rows=\"totalRows\"\n                  :per-page=\"perPage\"\n                  aria-controls=\"my-table\"\n                  class=\"mt-4\"\n                ></b-pagination>\n              </b-col>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst {BASE_URL} =  require('../../config')\n\nexport default {\n\n  data() {\n    return {\n      items: [],\n      tablefields: [\n        { key: \"images\", label: \"Image\", sortable: false },\n        { key: \"title\", label: \"Name\", sortable: true, editable: true },\n        { key: \"brand\", label: \"Brand\", sortable: true, editable: true },\n        { key: \"category\", label: \"Category\", sortable: true, editable: true },\n        { key: \"discount\", label: \"Discount\", sortable: true, editable: true },\n        { key: \"price\", label: \"Price\", sortable: true, editable: true },\n        { key: \"stock\", label: \"Quantity\", sortable: true, editable: true },\n        { key: \"status\", label: \"Status\", sortable: true, editable: true },\n        { key: \"actions\"},\n      ],\n      filter: null,\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [5, 10, 15, 50],\n      selectMode: \"multi\",\n      selected: []\n    };\n  },\n  created() {\n    \n    this.$http.get(`${BASE_URL}/product/getall`, {\n      token: \"\"\n    })\n      .then(response => {\n        this.items = response.data\n      })\n      .catch(function (error) {\n        console.log('error', error);\n      });\n\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.tablefields\n        .filter(f => f.sortable)\n        .map(f => {\n          return { text: f.label, value: f.key };\n        });\n    },\n    selectedRows() {\n      return this.items.filter(item => item.delete);\n    }\n  },\n  methods: {\n    deleteSelected(item) {\n      let objIndex = this.selected.findIndex((obj => obj == item._id));\n      if (objIndex > -1) {\n        this.selected.splice(objIndex, 1);\n      } else {\n        this.selected.push(item._id)\n      }\n    },\n    getImgUrl(path) {\n      return require(\"@/assets/images/pro3/\" + path);\n    },\n    rowSelected(item) {\n      this.selected = item._id;\n      if (item[0]) {\n        this.edit = this.edit !== item[0]._id ? item[0]._id : null;\n      }\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n    deleteRow() {\n      for (var i = this.items.length - 1; i >= 0; i--) {\n        for (var j = 0; j < this.selected.length; j++) {\n          if (this.items[i] && (this.items[i]._id === this.selected[j])) {\n            this.items.splice(i, 1);\n          }\n        }\n      }\n      // this.$http.post(`${BASE_URL}/user/delete`, {\n      //     token: \"\",\n      //     selected: selected\n      // })\n      // .then(response => {\n      //     if(response.data.success){\n\n      //     }\n      // })\n      // .catch(function (error) {\n      //     console.log('error', error);\n      // });\n    },\n    deleteBatchRow() {\n      for (var i = 0; i < this.selected.length; i++) {\n        if (this.items[i]._id == this.selected[i]) {\n          this.items.splice(this.items[i], 1);\n        }\n      }\n      console.log(-1)\n    },\n    showMsgBoxTwo() {\n      this.$bvModal.msgBoxConfirm('Are you sure!', {\n        title: 'Confirmation',\n        size: 'md',\n        buttonSize: 'sm',\n        okVariant: 'primary',\n        okTitle: 'YES',\n        cancelTitle: 'CANCLE',\n        footerClass: 'p-2',\n        hideHeaderClose: false,\n        // centered: true\n      })\n        .then(value => {\n          if (value) {\n            this.deleteRow();\n            this.selected = [];\n          }\n        })\n        .catch(err => {\n          // An error occurred\n        })\n    }\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}